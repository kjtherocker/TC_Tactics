// Fill out your copyright notice in the Description page of Project Settings.


#include "FloorBase.h"


void UFloorBase::Initialize()
{
    GridDimensionX = 20;
    GridDimensionY = 20;

    EnemyStartPositions.Add(FVector2d(1,1));
    
 //   FloorRevealed[GridDimensionX * GridDimensionY];

  //  for (int i = GridDimensionX * GridDimensionY - 1; i >= 0; i--)
  //  {
  //      FloorRevealed[i] = false;
  //  }
    
  // short tableinit[] =
  // {
  //     1, 2, 3,  4, 5, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0, //20
  //     6,  7,  8, 9, 10,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, //19
  //     11,  12,  13, 14,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0, //18
  //     15, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0, 0, 0,  0, //17
  //     0, 0,   0, 0,  0, 0,  0, 0,  0,  0, 0,  0,  0, 0,  0, 0,  0,  0,  0,  0, //16
  //     0, 0,   0, 0,  0, 0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0, 0,  0,  0, //15
  //     0,  0,  0,  0,  0,  0,  0, 0,  0, 0,  0,  0,  0,  0, 0, 0, 0, 0,  0, 0, //14
  //     0,  0,  0,  0,  0, 0,  0, 0,  0, 0, 0,  0,  0,  0,  0, 0, 0,  0,  0,  0, //13
  //     0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0,  0,  0,  0, //12
  //     0,  0,  0,  0,  0,  0,  0, 0,  0, 0,  0,  0,  0, 0,  0,  0, 0, 0,  0,  0, //11
  //     0,  0,  0,  0,  0, 0,  0, 0,  0, 0, 0,  0,  0,  0,  0,  0, 0, 0,  0,  0, //10
  //     0,  0, 0,  0, 0, 0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0,  0,  0,  0, //9
  //     0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0, //8
  //     0,  0, 0,  0,  0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  0,  0, 0, 0, 0,  0, //7
  //     0, 0, 0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0, //6
  //     8,  0,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0,  0,  0, 0, 0,  0, //5
  //     0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0, 0,  0,  0,  0, 0, 0,  0,  0,  0, //4
  //     0,  0,  0,  0,  0, 0,  0, 0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0, //3
  //     0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0, 0, 0,  0,  0, 0, 0, 0, 0,  0, //2
  //     0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0  //1
  // //  1   2   3   4   5   6   7   8   9  10  11   12  13  14  15  16  17  18  19  20
  // }; 
//
    short tableinit[] =
       {
           0, 10, 15,  9, 10, 15,  9,  0,  2,  0,  0,  0,  0,  0,  0,  4, 11, 15,  3,  0, //0
           4,  5,  5, 13, 14,  5,  5, 15,  5,  9, 11, 11, 11, 11, 11, 15,  9, 14, 11,  3, //1
           0,  8,  5, 13,  8, 12,  7,  8,  5,  7,  0,  0,  0,  0,  0,  8, 13,  6,  0,  0, //2
           10, 11, 7,  6,  0,  0,  0,  0,  6,  0,  0,  0,  0, 10, 15,  9,  6, 14, 15,  9, //3
           6, 10, 15, 13,  0, 10,  9, 10,  5,  9, 10,  9,  0, 14,  5, 13,  6,  8,  5,  7, //4
           6, 14, 12, 13,  2, 14,  5,  5,  5,  5,  5, 13,  0,  8,  5,  7,  6, 10,  5,  9, //5
           6,  6,  0,  6,  6,  8,  7, 14,  5, 13,  8,  7,  0,  0, 14, 15, 13, 14,  5, 13, //6
           6,  6,  0,  6,  6, 10,  9, 14,  5, 13, 10,  9,  0,  0,  8, 12, 13,  6,  6,  6, //7
           6,  6,  0,  6,  6, 14,  5,  5,  5,  5,  5, 13,  0,  2, 10,  9,  8,  7,  6,  6, //8
           6,  6,  0,  6,  6,  8,  7, 14,  5, 13,  8,  7,  0, 14,  5,  5, 11, 11,  7,  6, //9
           6,  6,  0,  6,  6, 10,  9, 14,  5, 13, 10,  9,  0,  6,  8,  7, 10, 15,  9,  6, //10
           6, 14, 15,  5, 13, 14,  5,  5,  5,  5,  5, 13,  0,  6, 10,  9,  6,  8,  7,  6, //11
           6,  8, 12,  7,  1,  8,  7,  8,  5,  7,  8,  7,  0,  6,  8,  7,  5, 11,  9,  6, //12
           8, 11, 15,  9,  0,  0,  4, 15,  5, 15,  3,  0,  0,  8,  9,  4, 13, 10, 13,  6, //13
           10, 9, 14, 13,  0,  0,  0,  8,  5,  7,  0,  0,  0,  0, 14,  9,  6,  8,  7,  6, //14
           8, 12, 12, 12, 11, 11, 11, 11, 12, 11, 11, 11, 15,  3, 14,  7,  8, 11, 11,  7, //15
           0,  0,  0,  0,  0, 10,  9,  0,  0,  0,  0, 10,  5,  9,  8, 11, 11,  9,  0,  0, //16
           0,  0,  0,  0,  0, 14,  5, 11, 15, 11, 11, 12,  5,  7,  0,  2,  0,  6,  0,  2, //17
           0,  0,  0,  0,  0,  8,  7, 10,  5,  9, 10, 15, 13,  0,  0, 14, 11, 12, 11,  7, //18
           0,  0,  0,  0,  0,  0,  0,  8, 12,  7,  8,  7,  1,  0,  0,  1,  0,  0,  0,  0  //19
       //  0   1   2   3   4   5   6   7   8   9  10   11  12  13  14  15  16  17  18  19
       }; 
    
    FloorBlueprint.Append(tableinit, UE_ARRAY_COUNT(tableinit));
}

int UFloorBase::GetIndex(int aRow, int aColumn)
{
    return aRow * GridDimensionX + aColumn;
}

